<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add Products - Read & Grow</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.5.0/dist/sweetalert2.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.5.0/dist/sweetalert2.all.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
    <style>
        @media (max-width: 768px) {
            #sidebar {
                width: 100%;
                height: auto;
                position: relative;
            }
            .main-content {
                margin-left: 0 !important;
                padding: 1rem;
            }
        }
        * {
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
        }
        body {
            overscroll-behavior: none;
            margin: 0;
        }
        .container-fluid {
            display: flex;
            width: 100%;
            min-height: 100vh;
        }
    </style>
</head>

<body class="bg-gray-50 text-gray-800 font-sans">
    <div class="container-fluid">
        <!-- Sidebar -->
        <%- include("../partials/admin/adminSideBar.ejs") %>

        <!-- Main Content -->
        <div class="flex-1 main-content p-6" style="margin-left: calc(5% + 0px);">
            <header class="bg-white shadow-sm sticky top-0 z-10 mb-6">
                <div class="flex justify-between items-center px-6 py-4">
                    <h1 class="text-2xl font-semibold text-gray-800">Add Products</h1>
                </div>
            </header>

            <div class="bg-white rounded-lg shadow-md p-6 max-w-2xl mx-auto">
                <form id="addProductForm" class="space-y-6" enctype="multipart/form-data">
                    <div>
                        <label for="name" class="block text-sm font-medium text-gray-700">Product Name</label>
                        <input type="text" id="name" name="name" required
                            class="mt-1 w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:outline-none">
                    </div>
                    <div>
                        <label for="description" class="block text-sm font-medium text-gray-700">Description</label>
                        <textarea id="description" name="description" required
                            class="mt-1 w-full p-3 border border-gray-300 rounded-lg h-32 focus:ring-2 focus:ring-blue-500 focus:outline-none"></textarea>
                    </div>
                    <div>
                        <label for="category" class="block text-sm font-medium text-gray-700">Category</label>
                        <input type="text" id="category" name="category" required
                            class="mt-1 w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:outline-none">
                    </div>
                    <div>
                        <label for="author" class="block text-sm font-medium text-gray-700">Author</label>
                        <input type="text" id="author" name="author" required
                            class="mt-1 w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:outline-none">
                    </div>
                    <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
                        <div>
                            <label for="price" class="block text-sm font-medium text-gray-700">Price ($)</label>
                            <input type="number" id="price" name="price" step="0.01" min="0" required
                                class="mt-1 w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:outline-none">
                        </div>
                        <div>
                            <label for="stock" class="block text-sm font-medium text-gray-700">Stock</label>
                            <input type="number" id="stock" name="stock" min="0" required
                                class="mt-1 w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:outline-none">
                        </div>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Images (up to 3)</label>
                        <div class="flex flex-col space-y-6">
                            <!-- Image Upload 1 -->
                            <div class="flex flex-col items-center justify-center p-6 border-2 border-dashed border-gray-300 rounded-lg">
                                <input type="file" id="image1" name="images" accept="image/*" class="hidden"
                                    onchange="previewImage(event, 1)">
                                <button type="button" onclick="document.getElementById('image1').click()"
                                    class="px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition">
                                    <i class="fas fa-upload mr-2"></i>Choose Image 1
                                </button>
                                <div id="preview1" class="mt-4 w-full max-w-xs relative hidden">
                                    <img id="img-preview1" class="max-w-full rounded" alt="Preview 1">
                                    <button type="button" onclick="startCrop(1)"
                                        class="absolute bottom-2 right-2 px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600 transition">Crop</button>
                                    <button type="button" onclick="removeImage(1)"
                                        class="absolute bottom-2 left-2 px-3 py-1 bg-red-500 text-white rounded hover:bg-red-600 transition">Remove</button>
                                </div>
                            </div>
                            <!-- Image Upload 2 -->
                            <div class="flex flex-col items-center justify-center p-6 border-2 border-dashed border-gray-300 rounded-lg">
                                <input type="file" id="image2" name="images" accept="image/*" class="hidden"
                                    onchange="previewImage(event, 2)">
                                <button type="button" onclick="document.getElementById('image2').click()"
                                    class="px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition">
                                    <i class="fas fa-upload mr-2"></i>Choose Image 2
                                </button>
                                <div id="preview2" class="mt-4 w-full max-w-xs relative hidden">
                                    <img id="img-preview2" class="max-w-full rounded" alt="Preview 2">
                                    <button type="button" onclick="startCrop(2)"
                                        class="absolute bottom-2 right-2 px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600 transition">Crop</button>
                                    <button type="button" onclick="removeImage(2)"
                                        class="absolute bottom-2 left-2 px-3 py-1 bg-red-500 text-white rounded hover:bg-red-600 transition">Remove</button>
                                </div>
                            </div>
                            <!-- Image Upload 3 -->
                            <div class="flex flex-col items-center justify-center p-6 border-2 border-dashed border-gray-300 rounded-lg">
                                <input type="file" id="image3" name="images" accept="image/*" class="hidden"
                                    onchange="previewImage(event, 3)">
                                <button type="button" onclick="document.getElementById('image3').click()"
                                    class="px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition">
                                    <i class="fas fa-upload mr-2"></i>Choose Image 3
                                </button>
                                <div id="preview3" class="mt-4 w-full max-w-xs relative hidden">
                                    <img id="img-preview3" class="max-w-full rounded" alt="Preview 3">
                                    <button type="button" onclick="startCrop(3)"
                                        class="absolute bottom-2 right-2 px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600 transition">Crop</button>
                                    <button type="button" onclick="removeImage(3)"
                                        class="absolute bottom-2 left-2 px-3 py-1 bg-red-500 text-white rounded hover:bg-red-600 transition">Remove</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="flex justify-end">
                        <button type="submit"
                            class="px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition focus:outline-none">Save Product</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Crop Modal -->
    <div id="cropModal" class="fixed inset-0 bg-gray-800 bg-opacity-50 flex items-center justify-center hidden z-50">
        <div class="bg-white p-6 rounded-lg shadow-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto">
            <div class="flex justify-between items-center mb-4">
                <h2 class="text-xl font-semibold">Crop Image</h2>
                <button id="cropModalClose" class="text-gray-500 hover:text-gray-700 text-2xl" aria-label="Close">×</button>
            </div>
            <div class="mb-4">
                <img id="cropImage" class="max-w-full max-h-[60vh]" alt="Crop preview">
            </div>
            <div class="flex justify-end space-x-4">
                <button id="cancelCrop" class="px-4 py-2 bg-gray-300 text-gray-700 rounded-lg hover:bg-gray-400 transition">Cancel</button>
                <button id="applyCrop" class="px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition">Save Crop</button>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            let croppers = {};
            let currentIndex = null;

            // Preview image when selected
            window.previewImage = function (event, index) {
                const file = event.target.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        const previewImg = document.getElementById(`img-preview${index}`);
                        previewImg.src = e.target.result;
                        document.getElementById(`preview${index}`).classList.remove('hidden');
                    };
                    reader.readAsDataURL(file);
                }
            };

            // Start cropping process
            window.startCrop = function (index) {
                currentIndex = index;
                const img = document.getElementById(`img-preview${index}`);
                const cropImg = document.getElementById('cropImage');
                cropImg.src = img.src;

                document.getElementById('cropModal').classList.remove('hidden');
                if (croppers[index]) croppers[index].destroy();

                croppers[index] = new Cropper(cropImg, {
                    aspectRatio: 1,
                    viewMode: 2,
                    autoCropArea: 1,
                    responsive: true
                });
            };

            // Remove image
            window.removeImage = function (index) {
                const input = document.getElementById(`image${index}`);
                input.value = "";
                document.getElementById(`img-preview${index}`).src = "";
                document.getElementById(`preview${index}`).classList.add('hidden');
                if (croppers[index]) {
                    croppers[index].destroy();
                    delete croppers[index];
                }
            };

            // Modal close
            document.getElementById('cropModalClose').addEventListener('click', () => {
                document.getElementById('cropModal').classList.add('hidden');
                if (croppers[currentIndex]) croppers[currentIndex].destroy();
            });

            // Cancel crop
            document.getElementById('cancelCrop').addEventListener('click', () => {
                document.getElementById('cropModal').classList.add('hidden');
                if (croppers[currentIndex]) croppers[currentIndex].destroy();
            });

            // Apply crop
            document.getElementById('applyCrop').addEventListener('click', () => {
                if (croppers[currentIndex]) {
                    const croppedCanvas = croppers[currentIndex].getCroppedCanvas();
                    if (croppedCanvas) {
                        croppedCanvas.toBlob((blob) => {
                            const file = new File([blob], `cropped-image${currentIndex}.jpg`, { type: 'image/jpeg' });
                            const imgPreview = document.getElementById(`img-preview${currentIndex}`);
                            imgPreview.src = URL.createObjectURL(blob);
                            const input = document.getElementById(`image${currentIndex}`);
                            const dataTransfer = new DataTransfer();
                            dataTransfer.items.add(file);
                            input.files = dataTransfer.files;
                            document.getElementById('cropModal').classList.add('hidden');
                            croppers[currentIndex].destroy();
                            delete croppers[index];
                        }, 'image/jpeg');
                    }
                }
            });

            // Form submission
            document.getElementById('addProductForm').addEventListener('submit', async (e) => {
                e.preventDefault();
                const formData = new FormData();
                formData.append('name', document.getElementById('name').value);
                formData.append('description', document.getElementById('description').value);
                formData.append('category', document.getElementById('category').value);
                formData.append('author', document.getElementById('author').value);
                formData.append('price', document.getElementById('price').value);
                formData.append('stock', document.getElementById('stock').value);

                let hasImages = false;
                for (let i = 1; i <= 3; i++) {
                    const input = document.getElementById(`image${i}`);
                    if (input.files?.[0]) {
                        formData.append('images', input.files[0]);
                        hasImages = true;
                    }
                }

                if (!hasImages) {
                    Toastify({
                        text: "Please upload at least one image",
                        duration: 3000,
                        gravity: "top",
                        position: "right",
                        backgroundColor: "#f44336"
                    }).showToast();
                    return;
                }

                try {
                    Swal.fire({
                        title: 'Saving...',
                        text: 'Please wait',
                        allowOutsideClick: false,
                        didOpen: () => Swal.showLoading()
                    });
                    const response = await fetch('/admin/add-products', {
                        method: 'POST',
                        body: formData
                    });
                    const result = await response.json();
                    Swal.close();

                    if (!response.ok) throw new Error(result.message || 'Failed to add product');

                    Swal.fire({
                        title: 'Success!',
                        text: result.message || 'Product added successfully',
                        icon: 'success',
                        confirmButtonColor: '#3085d6'
                    });
                    document.getElementById('addProductForm').reset();
                    [1, 2, 3].forEach(i => removeImage(i));
                    setTimeout(() => window.location.href = '/admin/products', 1500);
                } catch (error) {
                    console.error('Submission error:', error);
                    Toastify({
                        text: error.message || "Failed to save product",
                        duration: 3000,
                        gravity: "top",
                        position: "right",
                        backgroundColor: "#f44336"
                    }).showToast();
                }
            });
        });
    </script>
</body>
</html>