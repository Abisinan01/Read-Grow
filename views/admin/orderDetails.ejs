<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Details - Read & Grow</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.5.0/dist/sweetalert2.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
    <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.5.0/dist/sweetalert2.all.min.js"></script>
</head>
<body class="bg-gray-100 font-sans min-h-screen flex flex-col md:flex-row">
    <!-- Sidebar -->
    <%- include("../partials/admin/adminSideBar.ejs") %>

    <div class="md:ml-[0%] p-4 flex-1 flex flex-col overflow-x-hidden">
        <div class="flex justify-between items-center mb-4">
            <h1 class="text-2xl font-bold text-gray-800">Order Details - #<%= order.orderId %></h1>
            <a href="/admin/orders" class="bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700 transition duration-200">Back to Orders</a>
        </div>

        <div class="grid md:grid-cols-2 gap-4">
            <div class="bg-white shadow-md rounded-lg p-6">
                <h2 class="text-lg font-semibold text-gray-800 mb-4">Order Overview</h2>
                <div class="space-y-4">
              
                  <div class="flex justify-between items-center">
                    <span class="text-sm font-medium text-gray-700">Order ID:</span>
                    <p class="text-sm text-gray-800">#<%= order.orderId %></p>
                  </div>
              
                  <div class="flex justify-between items-start">
                    <span class="text-sm font-medium text-gray-700">Order Date:</span>
                    <p class="text-sm text-gray-600 text-right">
                      Placed on:<br />
                      <%= new Date(order.createdAt).toLocaleString('en-US', {
                        year: 'numeric',
                        month: 'long',
                        day: 'numeric',
                        hour: '2-digit',
                        minute: '2-digit',
                        second: '2-digit',
                        hour12: true
                      }) %>
                    </p>
                  </div>
              
                  <div class="flex justify-between items-center">
                    <span class="text-sm font-medium text-gray-700">Status:</span>
                    <%
                      let statusClass = "";
                      switch(order.status) {
                        case "Pending":
                          statusClass = "text-yellow-500 font-semibold";
                          break;
                        case "Delivered":
                          statusClass = "text-green-600 font-semibold";
                          break;
                        case "Cancelled":
                          statusClass = "text-red-600 font-semibold";
                          break;
                        case "Returned":
                          statusClass = "text-purple-600 font-semibold";
                          break;
                        default:
                          statusClass = "text-gray-500 font-semibold";
                      }
                    %>
                    <span class="<%= statusClass %>"><%= order.status %></span>
                  </div>
              
                  <div class="flex justify-between items-center">
                    <span class="text-sm font-medium text-gray-700">Payment Method:</span>
                    <span class="text-sm text-gray-700"><%= order.payment %></span>
                  </div>
              
                  <div class="flex justify-between items-center   pt-1 mt-1">
                    <span class="text-sm text-gray-600">Shipping charge (Not be Refunded):</span>
                    <span class="text-sm text-gray-700"><%= order.shippingCharge %></span>
                  </div>
              
                  <div class="flex justify-between items-center">
                    <span class="text-sm font-medium text-gray-700">Total Quantity:</span>
                    <span class="text-sm text-gray-700"><%= totalQty %></span>
                  </div>
              
                  <div class="border border-gray-300 rounded-lg p-4 bg-gray-50 mt-2">
                    <div class="flex justify-between items-center mb-2">
                      <span class="text-sm font-medium text-gray-700">Total Items:</span>
                      <span class="text-sm text-gray-700"><%= order.items.length %></span>
                    </div>
              
                    <% for(let i = 0; i < order.items.length; i++) { %>
                      <div class="flex justify-between items-center mb-1">
                        <span class="text-sm text-gray-700">Item <%= i + 1 %>:</span>
                        <span class="text-sm text-gray-700"><%= order.items[i].status %></span>
                      </div>
                    <% } %>
                  </div>
              
                  <% if(order.discount) { %>
                    <div class="flex justify-between items-center">
                      <span class="text-sm text-gray-700">Total Discount:</span>
                      <span class="text-sm text-red-500">-<%= order.discount %></span>
                    </div>
                  <% } %>
              
                  <% if(order.coupon) { %>
                    <div class="flex justify-between items-center">
                      <span class="text-sm text-gray-700">Applied Coupon:</span>
                      <span class="text-sm text-red-500">-<%= order.coupon.discountValue %></span>
                    </div>
                  <% } %>
              
                  <div class="flex justify-between items-center border-t pt-4 mt-4">
                    <span class="text-sm font-bold text-gray-700">Total:</span>
                    <span class="text-sm font-bold text-green-700">Rs. <%= (order?.totalAmount).toFixed(2) %></span>
                  </div>
              
                </div>
              </div>
              

              <div class="bg-white shadow-md rounded-lg p-6">
                <h2 class="text-lg font-semibold text-gray-800 mb-4">Customer Information</h2>
                
                <div class="space-y-3">
                  <div class="flex justify-between">
                    <span class="text-sm font-medium text-gray-700">Name:</span>
                    <span class="text-sm text-gray-800"><%= user.username %></span>
                  </div>
              
                  <div class="flex justify-between">
                    <span class="text-sm font-medium text-gray-700">Email:</span>
                    <span class="text-sm text-gray-800"><%= user.email %></span>
                  </div>
              
                  <div class="border border-gray-300 rounded-md bg-gray-50 p-4">
                    <h3 class="text-sm font-semibold text-gray-700 mb-2">Shipping Address:</h3>
                    <div class="text-sm text-gray-700 space-y-1">
                      <p><%= order.addressId.firstName %> <%= order.addressId.lastName %></p>
                      <p><%= order.addressId.street %></p>
                      <p><%= order.addressId.city %> - <%= order.addressId.pincode %></p>
                      <p>Phone: <%= order.addressId.phoneNumber %></p>
                    </div>
                  </div>
                </div>
              </div>
              
        </div>

        <div class="bg-white shadow-md rounded-lg p-6 mt-4">
            <h2 class="text-lg font-semibold text-gray-700 mb-4">Ordered Product</h2>
            <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                <div class="md:col-span-1 w-24">
                    <img src="<%= viewOrder.images[0] %>" alt="Book Cover" class="w-full h-auto rounded-lg">
                </div>
                <div class="md:col-span-2 space-y-3">
                    <div class="flex justify-between items-center">
                        <span class="text-sm font-medium text-gray-600">Product Name:</span>
                        <span class="text-sm text-gray-700 font-semibold"><%= viewOrder.name %></span>
                    </div>
                    <div class="flex justify-between items-center">
                      <span class="text-sm font-medium text-gray-600">Product category:</span>
                      <span class="text-sm text-gray-700 font-semibold"><%= viewOrder.category %></span>
                    </div>  

                    <div class="flex justify-between items-center">
                        <span class="text-sm font-medium text-gray-600">Status: </span>
                        <p class="text-sm text-gray-600">
                            <% 
                            let statusClass2 = "";
                            let itemStatus = order.items[index].status; // Get the status from the correct location
                            switch(itemStatus) { 
                                case "Pending":
                                    statusClass2 = "text-yellow-500 font-semibold";
                                    break;
                                case "Delivered":
                                    statusClass2 = "text-green-500 font-semibold";
                                    break;
                                case "Cancelled":
                                    statusClass2 = "text-red-500 font-semibold";
                                    break;
                                case "Returned":
                                    statusClass2 = "text-purple-500 font-semibold";
                                    break;
                                default:
                                    statusClass2 = "text-gray-500 font-semibold";
                            }
                            %>
                            <span class="<%= statusClass2 %>"><%= itemStatus %></span>
                        </p>
                    </div>

                    <% if(viewOrder.bestOffer){%>
                        <!-- <div class="flex justify-between items-center">
                            <span class="text-sm font-medium text-gray-700  ">Discount of product:</span>
                            <span class="text-sm text-red-600"><%= viewOrder.bestOffer %>%</span>
                        </div> -->
                    <% } %>

                    <!-- <div class="flex justify-between items-center">
                        <span class="text-sm font-medium text-gray-600">Acctual price:</span>
                        <span class="text-sm font-medium text-gray-700">Rs. <%= order.items[index].price %></span>
                    </div> -->
                    
                    <div class="flex justify-between items-center">
                        <% if(order.items[index].status !== 'Returned' && order.items[index].status !== 'Cancelled'){ %>
                            <span class="text-sm font-bold text-gray-600">Paid amount:</span>
                        <% }else{%>
                            <span class="text-sm font-bold text-gray-600">Refunded amount:</span>
                        <% } %>
                        <% let paidAmount =  (viewOrder?.bestOffer / 100) * order.items[index]?.price || 0 %>
                        <span class="text-sm font-bold text-green-700">Rs. <%= order.items[index].price %> </span>
                    </div>

                    <!-- Accept and Reject Buttons -->
                    <% if(order.items[index].isRequested || order.items[index].isReturned || order.items[index].isCancelled) { %>
                        <div class="border border-red-400 bg-red-50 p-3 rounded-lg mt-3">
                            <div class="flex justify-between items-center">
                                <span class="font-semibold text-red-700">Reason:</span>
                                <span class="font-semibold text-red-700"><%= order.items[index].reason %></span>
                            </div>
                        </div>
                    <% } %>
                    
                    <div class="flex justify-end space-x-4 mt-4">
                        <% if(order.items[index].isRequested) {%>
                        <button onclick="acceptRequest('<%= order.items[index].productId %>','<%= order._id %>')" class="px-4 py-2 bg-green-700 text-white text-sm font-semibold hover:bg-green-600">Accept</button>
                        <button onclick="rejectRequest('<%= order.items[index].productId %>','<%= order._id %>')" class="px-4 py-2 bg-red-700 text-white text-sm font-semibold  hover:bg-red-600">Reject</button>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>
        
    </div>
    <script>
        function showToast(message, type = 'error') {
            Toastify({
                text: message,
                duration: 2000,
                gravity: "top",
                position: "center",
                backgroundColor: type === 'success' ? "#16a34a" : "#dc2626",
                stopOnFocus: true,
            }).showToast();
        }

        async function acceptRequest(productId,orderId) {
            console.log(productId,orderId)
            console.log("Product ID:", productId);
 

            try {
                const response = await fetch(`/admin/accept-return/${productId}/${orderId}`, {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' }
                });
                const result = await response.json()
                if(!response.ok){
                    showToast(result.message||'Somthing went wrong')
                    return
                }

                showToast(result.message,'success')
                setTimeout(() => {
                    location.reload()
                }, 1000);
            } catch (error) {
                showToast('Accept return failed')
            }
        }

        async function rejectRequest(productId,orderId) {
            console.log(productId,orderId)
            console.log("Product ID:", productId);
            try {
                const response = await fetch(`/admin/reject-return/${productId}/${orderId}`, {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' }
                });
                const result = await response.json()
                if(!response.ok){
                    showToast(result.message||'Somthing went wrong')
                    return
                }

                showToast(result.message,'success')
                setTimeout(() => {
                    location.reload()
                }, 1000);
            } catch (error) {
                showToast('Accept return failed')
            }
        }
    </script>
</body>
</html>