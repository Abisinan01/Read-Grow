<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>OTP Verification</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdn.jsdelivr.net/npm/toastify-js@1.12.0/src/toastify.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/toastify-js@1.12.0/src/toastify.min.js"></script>
    <style>
        .otp-input {
            width: 3.5rem;
            height: 3.5rem;
            text-align: center;
            font-size: 1.5rem;
            font-weight: 600;
            border: 2px solid #d1d5db;
            border-radius: 0.5rem;
            transition: all 0.3s ease;
        }
        .otp-input:focus {
            border-color: #10b981;
            box-shadow: 0 0 0 3px rgba(16, 185, 129, 0.2);
            outline: none;
        }
        .otp-input:hover:not(:focus) {
            border-color: #6ee7b7;
        }
        .animate-fade-in {
            animation: fadeIn 0.8s ease-out;
        }
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
    </style>
</head>
<body class="bg-gradient-to-b from-gray-100 to-gray-200 flex items-center justify-center min-h-screen px-4">
    <div class="bg-white p-6 sm:p-8 rounded-2xl shadow-xl w-full max-w-md text-center border border-gray-100 animate-fade-in">
        <h2 class="text-2xl sm:text-3xl font-bold text-gray-800 mb-6">OTP Verification</h2>
        <form id="otpForm" class="space-y-6">
            <div class="flex justify-center space-x-3 sm:space-x-4">
                <input type="text" id="otp1" maxlength="1" class="otp-input" required aria-label="OTP digit 1">
                <input type="text" id="otp2" maxlength="1" class="otp-input" required aria-label="OTP digit 2">
                <input type="text" id="otp3" maxlength="1" class="otp-input" required aria-label="OTP digit 3">
                <input type="text" id="otp4" maxlength="1" class="otp-input" required aria-label="OTP digit 4">
            </div>
            <div class="flex justify-between text-sm sm:text-base text-gray-600">
                <button type="button" id="resendOtp" class="text-emerald-600 hover:text-emerald-700 font-medium transition-colors disabled:text-gray-400 disabled:cursor-not-allowed" disabled>Resend OTP</button>
                <span id="Timer" class="font-medium text-gray-700">OTP expires in 00:30</span>
            </div>
            <button type="submit" id="verifyBtn"
                    class="bg-gradient-to-r from-red-600 to-red-900 text-white px-6 sm:px-8 py-2 rounded-full text-base sm:text-lg font-semibold hover:from-emerald-700 hover:to-teal-600 transition-all duration-300 w-full shadow-md">
                Verify OTP
            </button>
        </form>
    </div>

    <script>
        function showToast(message, type = 'error') {
            Toastify({
                text: message,
                duration: 2000,
                gravity: "top",
                position: "center",
                backgroundColor: type === 'success' ? "#16a34a" : "#dc2626",
                stopOnFocus: true,
            }).showToast();
        }

        const otpInputs = document.querySelectorAll('.otp-input');
        otpInputs.forEach((input, index) => {
            input.addEventListener('input', (e) => {
                if (e.target.value.length === 1 && index < otpInputs.length - 1) {
                    otpInputs[index + 1].focus();
                }
            });
            input.addEventListener('keydown', (e) => {
                if (e.key === 'Backspace' && !e.target.value && index > 0) {
                    otpInputs[index - 1].focus();
                }
            });
        });

        document.getElementById('otpForm').addEventListener('submit', async (event) => {
            event.preventDefault();
            const verifyBtn = document.getElementById('verifyBtn');
            if (verifyBtn.disabled) {
                showToast('OTP has expired. Please resend a new OTP.');
                return;
            }
            const otp = Array.from(otpInputs).map(input => input.value).join('');
            if (otp.length !== 4) {
                showToast('Please enter a 4-digit OTP');
                return;
            }
            try {
                const token = localStorage.getItem('otpToken');
                const response = await fetch('/otp/otp-verify', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${token}`,
                    },
                    body: JSON.stringify({ otp }),
                });
                const result = await response.json();
                if (!response.ok) {
                    showToast(result.message || 'Invalid OTP');
                    return;
                }
                if (result.success) {
                    showToast(result.message || 'OTP verified successfully', 'success');
                    setTimeout(() => {
                        window.location.href = result.redirect || '/dashboard';
                    }, 1000);
                }
            } catch (error) {
                showToast('An error occurred. Please try again.');
                console.error(`OTP verification error: ${error.message}`);
            }
        });

        document.getElementById('resendOtp').addEventListener('click', async () => {
            try {
                const token = localStorage.getItem('otpToken');
                if (!token) {
                    showToast('Session expired. Please log in again.');
                    return;
                }
                const response = await fetch('/otp/send-otp', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${token}`,
                    },
                    body: JSON.stringify({ token }),
                });
                const result = await response.json();
                if (!response.ok) {
                    showToast(result.message || 'Failed to resend OTP');
                    return;
                }
                showToast(result.message || 'OTP resent successfully', 'success');
                otpTimer(30);
            } catch (error) {
                showToast('An error occurred while resending OTP.');
                console.error(`Resend OTP error: ${error.message}`);
            }
        });

        function otpTimer(duration) {
            let time = duration;
            const timer = document.getElementById('Timer');
            const resendOtp = document.getElementById('resendOtp');
            const verifyBtn = document.getElementById('verifyBtn');
            resendOtp.disabled = true;
            resendOtp.classList.add('cursor-not-allowed');
            verifyBtn.disabled = false;
            verifyBtn.classList.remove('opacity-50', 'cursor-not-allowed');
            const interval = setInterval(() => {
                let minutes = Math.floor(time / 60);
                let seconds = time % 60;
                timer.textContent = `OTP expires in ${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;
                if (time <= 0) {
                    clearInterval(interval);
                    timer.textContent = 'OTP expired';
                    resendOtp.disabled = false;
                    resendOtp.classList.remove('cursor-not-allowed');
                    verifyBtn.disabled = true;
                    verifyBtn.classList.add('opacity-50', 'cursor-not-allowed');
                }
                time--;
            }, 1000);
        }

        otpTimer(30);
    </script>
</body>
</html>